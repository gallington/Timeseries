plot.fourier(function(t,w) {sin(w*t)}, 1, ts=seq(0,1,1/100))
library("stats", lib.loc="C:/Program Files/R/R-3.1.1/library")
plot.fourier(function(t,w) {sin(w*t)}, 1, ts=seq(0,1,1/100))
setwd("~/Timeseries")
crop<- read.csv(file="ee-cropcircle2.csv")
crop<- read.csv(file="ee-cropcircle2.csv.csv")
fft(crop, inverse=FALSE)
rm(crop)
crop<- read.csv(file="ee-cropcircle2.csv")
fft(crop, inverse=FALSE)
head(crop)
?fft
fft(crop$ndvi, inverse=FALSE)
x <- 1:4
fft(x)
fft(fft(x), inverse = TRUE)/length(x)
rm(crop)
crop<- read.csv(file="ee-cropcircle2.csv")
fft(crop$ndvi, inverse=FALSE)
crop
rm(crop)
crop<- read.csv(file="ee-cropcircle2.csv")
crop
rm(crop)
crop<- read.table(file="crop.txt", header=TRUE)
fft(crop$ndvi, inverse=FALSE)
crop
rm(crop)
crop<- read.table(file="crop.txt", header=FALSE)
fft(crop, inverse=FALSE)
fft(crop)
x<- 1:4
x
is.dataframe(crop)
crop.array<- as.vector(crop)
crop.array
fft(crop.array)
crop.test<- c(0.2889462,0.2063926,0.4616971,0.3383894,0.5573575,0.2513596,0.4189, 0.1848746, 0.2213894)
crop.test
fft(crop.test)
crop.test<- c(0.2889462,0.2063926,0.4616971,0.3383894,0.5573575,0.2513596,0.4189, 0.1848746, 0.2213894, 0.4621502,0.3739564,0.2022109,0.1148575,0.1699456,0.2640424,0.9638942,0.7984568,0.3725059,0.6689854,0.5477687,0.3554834,0.5526238,0.5912606,0.7937230,25 0.7858467)
crop.test<- c(0.2889462,0.2063926,0.4616971,0.3383894,0.5573575,0.2513596,0.4189, 0.1848746, 0.2213894, 0.4621502,0.3739564,0.2022109,0.1148575,0.1699456,0.2640424,0.9638942,0.7984568,0.3725059,0.6689854,0.5477687,0.3554834,0.5526238,0.5912606,0.7937230,0.7858467)
crop.test
fft(crop.test)/25
convert.fft(fft(crop.test))
convert.fft <- function(cs, sample.rate=1) {
cs <- cs / length(cs) # normalize
distance.center <- function(c)signif( Mod(c),        4)
angle           <- function(c)signif( 180*Arg(c)/pi, 3)
df <- data.frame(cycle    = 0:(length(cs)-1),
freq     = 0:(length(cs)-1) * sample.rate / length(cs),
strength = sapply(cs, distance.center),
delay    = sapply(cs, angle))
df
}
convert.fft(fft(crop.test))
crop.array<- crop.test
signal<-fft(crop.test)/25
plot.frequency.spectrum(signal)
X.k<- fft(crop.test)
plot.frequency.spectrum(X.k, xlimits=c(0,20))
plot(X.k)
library("stats", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("sp", lib.loc="~/R/win-library/3.1")
library("raster", lib.loc="~/R/win-library/3.1")
logspec = adply( crop.array, 1, function(x) {
## change spec.pgram parameters as per goals
ret = spectrum(x, taper=0, demean=T, pad=0, fast=T, plot=F)
return( data.frame(freq=ret$freq, spec=ret$spec))
})
adply?
?adply
?adply
??adply
library("plyr", lib.loc="~/R/win-library/3.1")
logspec = adply( crop.array, 1, function(x) {
## change spec.pgram parameters as per goals
ret = spectrum(x, taper=0, demean=T, pad=0, fast=T, plot=F)
return( data.frame(freq=ret$freq, spec=ret$spec))
})
par(mfrow = c(2,2))
spectrum(lh)
spectrum(lh, spans = 3)
spectrum(lh, spans = c(3,3))
spectrum(lh, spans = c(3,5))
par(mfrow = c(2,2))
spectrum(X.k)
par(mfrow = c(2,2))
spectrum(X.k)
spectrum(X.k, spans = 3)
spectrum(X.k, spans = c(3,3))
spectrum(X.k, spans = c(3,5))
plot(crop.arrary)
crop.yr<- read.table(data= "crop.txt")
crop.yr<- read.table(file= "crop-yr.txt")
plot(Date~NDVI)
crop.yr<- read.table(file= "crop-yr.txt", header=TRUE)
plot(crop.yr$Date ~ crop.yr$NDVI)
plot(crop.yr$NDVI ~ crop.yr$Date)
par(mfrow = c(1,1))
plot(crop.yr$NDVI ~ crop.yr$Date)
logspec = adply( crop.array, 1, function(x) {
## change spec.pgram parameters as per goals
ret = spectrum(x, taper=0, demean=T, pad=0, fast=T, plot=F)
return( data.frame(freq=ret$freq, spec=ret$spec))
})
spec<- spectrum(X.k)
spec
logspec = adply( crop.array, 1, function(x) {
## change spec.pgram parameters as per goals
ret = spectrum(x) #, taper=0, demean=T, pad=0, fast=T, plot=F)
return( data.frame(freq=ret$freq, spec=ret$spec))
})
require(plyr)
require(ggplot2)
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.1")
require(plyr)
require(ggplot2)
logmap = function(n, r, x0=0.5) {
ret = rep(x0,n)
for (ii in 2:n) {
ret[ii] = r*ret[ii-1]*(1-ret[ii-1])
}
return(ret)
}
## modify these for interesting behavior differences
rfrom = 3.4
rto = 3.7
rsteps=200
seqlen=1e4
require(plyr)
require(ggplot2)
mytimeseries = aaply(seq(from=rfrom, to=rto, length.out=rsteps), 1,
function(x) {
logmap(seqlen, x)
})
logspec = adply( crop.array, 1, function(x) {
## change spec.pgram parameters as per goals
ret = spectrum(x, taper=0, demean=T, pad=0, fast=T, plot=F)
return( data.frame(freq=ret$freq, spec=ret$spec))
})
logspec = adply( mytimeseries, 1, function(x) {
## change spec.pgram parameters as per goals
ret = spectrum(x, taper=0, demean=T, pad=0, fast=T, plot=F)
return( data.frame(freq=ret$freq, spec=ret$spec))
})
logspec.bw = ddply(logspec, 'freq', function(x) {
ret = boxplot.stats(log10(x$spec));
## sometimes $out is empty, bind NA to keep dimensions correct
return(data.frame(t(10^ret$stats), out=c(NA,10^ret$out)))
})
ggplot(logspec.bw, aes(x=1/(freq)))  +  geom_ribbon(aes(ymin=X1,
ymax=X5), alpha=0.35, fill='green')  +
geom_ribbon(aes(ymin=X2, ymax=X4), alpha=0.5, fill='blue') +
geom_line(aes(y=X3))  +
geom_point(aes(y=out), color='darkred') +
scale_x_continuous( trans=c('inverse'), name='Period')  +
scale_y_continuous(name='Power', trans='log10')
ggplot(logspec.bw, aes(x=1/(freq)))  +  geom_ribbon(aes(ymin=X1,
ymax=X5), alpha=0.35, fill='green')
ggplot(logspec.bw, aes(x=1/(freq)))  +  geom_ribbon(aes(ymin=X1,
ymax=X5), alpha=0.35, fill='green')
geom_ribbon(aes(ymin=X2, ymax=X4), alpha=0.5, fill='blue')
geom_line(aes(y=X3))
geom_point(aes(y=out), color='darkred')
scale_x_continuous( trans=c('inverse'), name='Period')
scale_y_continuous(name='Power', trans='log10')
ggplot(logspec.bw, aes(x=1/(freq)))
ggplot(logspec.bw, aes(x=1/(freq)))  +  geom_ribbon(aes(ymin=X1,
ymax=X5), alpha=0.35, fill='green')
par(mfrow = c(2,2))
spectrum(X.k)
spectrum(X.k, spans = 3)
spectrum(X.k, spans = c(3,3))
spectrum(X.k, spans = c(3,5))
spectrum(crop.array)
crop.array
X.k
spectrum(X.k)
install.packages("changepoint")
crop<-read.csv(file="crop.csv")
crop.yr<-read.csv(file="crop-yr.txt", header=T)
crop<-read.csv(file="crop.txt")
cpt.test<- cpt.mean(crop, penalty="SIC", pen.value=0, method="PELT", class=TRUE, param.estimates="TRUE")
library("changepoint", lib.loc="~/R/win-library/3.1")
cpt.test<- cpt.mean(crop, penalty="SIC", pen.value=0, method="PELT", class=TRUE, param.estimates="TRUE")
crop
cpt.test<- cpt.mean(crop-yr, penalty="SIC", pen.value=0, method="PELT", class=TRUE, param.estimates="TRUE")
crop
rm(crop)
crop<-read.csv(file="crop.txt", header=TRUE)
crop
cpt.test<- cpt.mean(crop, penalty="SIC", pen.value=0, method="PELT", class=TRUE, param.estimates="TRUE")
cpt.test<- cpt.mean(crop, penalty="None", method="PELT", class=TRUE, param.estimates="TRUE")
cpt.test<- cpt.mean(data="crop", penalty="None", method="PELT", class=TRUE, param.estimates="TRUE")
?set.seed
set.seed(10)
m.data<- c(rnorm(100,0,1), rnorm(100,1,1), rnorm(100,0,1), rnorm(100, 0.2, 1))
head(m.data)
head(m.data, n=5)
class(m.data)
dim(m.data)
str(m.data)
crop.v<- as.vector(crop)
head(crop.v)
cpt.test<- cpt.mean(crop.v, penalty="None", method="PELT", class=TRUE, param.estimates="TRUE")
is.vector(crop.v)
rm(crop.v)
crop.v<- read.txt("crop.v.txt")
crop.v<- read.table("crop.v.txt")
crop.v<- read.table("crop.v.txt", header=FALSE)
crop.v<- read.csv("crop.v.csv", header=FALSE)
cpt.test<- cpt.mean(crop.v, penalty="None", method="PELT", class=TRUE, param.estimates="TRUE")
summary(cpt.test)
print(cpt.test)
ts.plot(m.data, xlab="Index")
ts.plot(m.data, xlab="Index")
ts.plot(crop.v, xlab="yr")
m.data
crop.v
as.vector(crop.v)
is.vector(crop.v)
rm(crop.v)
crop.v<- c(0.288946182,0.206392571,0.461697102,0.338389397,0.55735749,0.251359582,0.418967426,0.184874564,0.221389428,0.462150216,0.373956442,0.202210858,0.114857547,0.169945583,0.264042407,0.963894248,0.798456788,0.372505873,0.668985426,0.547768712,0.355483383,0.552623808,0.591260552,0.793723047,0.785846651)
crop.v
is.vector(crop.v)
cpt.test<- cpt.mean(crop.v, penalty="SIC", pen.value=0, method="PELT", class=TRUE, param.estimates="TRUE")
ts.plot(crop.v)
cpt.test<- cpt.mean(crop.v, method="PELT")
cpt.pelt<-cpt.mean(crop.v, method="PELT")
plot(cpt.pelt, type="1", cpt.col="blue", xlab="Year",cpt.width=4)#not sure what cpt.width specifies check that
plot(cpt.pelt, cpt.col="blue", xlab="Year",cpt.width=4)
plot(cpt.pelt, cpt.col="blue", xlab="Year",cpt.width=2)
cpts(crop.v)
cpts(cpt.pelt)
crop.cpt.var<- cpt.var(crop.v, method="PELT")
plot(crop.cpt.var, xlab="Year")
ncpts(crop.cpt.var)
logLik(crop.cpt.var)
crop.var.bs<- cpt.var(crop.v, method="BinSeg", Q=5)
plot(crop.var.bs, xlab="Year")
ncpts(crop.var.bs)
logLike(crop.var.bs)
logLik(crop.var.bs)
horqin.succ<- c(0.179197967,0.15456523,0.152888149,0.140569419,0.14688693,0.148395404,0.115002044,0.126614213,0.126614213,0.12565586,0.136780366,0.129891455,0.141188487,0.135559723,0.150414303,0.150874451,0.145629361,0.159304023,0.180569053,0.160697281,0.151757017,0.161179796,0.175090492,0.171478093,0.178194612,0.173388571)
ts.plot(horquin.succ)
ts.plot(horqin.succ)
hor.mean.pelt<- cpt.mean(horqin.succ, method="PELT")
plot(hor.mean.pelt, cpt.col="blue", xlab="Year")
hor.var.pelt<- cpt.var(horqin.succ, method="PELT")
plot(hor.var.pelt, cpt.col="red", xlab="Year")
cpts(hor.var.pelt)
rm(mytimeseries)
hor.suc2<- c(0.136672512,0.145714864,0.156431332,0.139513969,0.139233142,0.149859384,0.144922584,0.15721342,0.149044916,0.161763027,0.15113686,0.145455673,0.145455688,0.124784298,0.138771281,0.177068949,0.154314101,0.147035316,0.183280572,0.168471247,0.155180871,0.170276895,0.195990801,0.190095052, 0.186847731,0.154901803)
hor2.mean.pelt<- cpt.mean(hor.suc2, method="PELT")
plot(hor2.mean.pelt, cpt.col="blue", xlab="Year")
hor2.var.pelt<- cpt.var(hor.suc2, method="PELT")
plot(hor2.var.pelt, cpt.col="red", xlab="Year")
gzd<-c(0.442976773
0.382634282
0.367733717
0.308709979
0.340819895
0.352207094
0.34451139
0.366591036
0.431466818
0.377004385
0.466338754
0.401931673
0.313874125
0.456872612
0.383233547
0.264818758
0.304096848
0.298382699
0.484170377
0.304047883
0.346563101
0.284393549
0.222271159
0.326116353
0.304162651
0.213127181
)
gzd<-c(0.442976773,
0.382634282,
0.367733717,
0.308709979,
0.340819895,
0.352207094,
0.34451139,
0.366591036,
0.431466818,
0.377004385,
0.466338754,
0.401931673,
0.313874125,
0.456872612,
0.383233547,
0.264818758,
0.304096848,
0.298382699,
0.484170377,
0.304047883,
0.346563101,
0.284393549,
0.222271159,
0.326116353,
0.304162651,
0.213127181)
gzd
ts.plot(gzd)
gzd.cpt.mean<- cpt.mean(gzd, method="PELT")
plot(gzd.cpt.mean, cpt.col="blue", xlab="Year")
gzd.cpt.var<- cpt.var(gzd, method="PELT")
plot(gzd.cpt.var, cpt.col="red", xlab="Year")
fixed<- c(0.201976195,
0.179028958,
0.196940467,
0.188880578,
0.176459134,
0.168250263,
0.153243989,
0.169034407,
0.169662535,
0.169199288,
0.183125421,
0.172539115,
0.205695152,
0.204473704,
0.194707945,
0.217919722,
0.249000937,
0.229370907,
0.198242053,
0.236739263,
0.228873253,
0.239536032,
0.203003883,
0.20818983,
0.207709476,
0.161671758)
fxd.cpt.mean<- cpt.mean(fixed, method="PELT")
fxd.cpt.var<- cpt.var(fixed, method="PELT")
plot(fxd.cpt.var, cpt.col="red", xlab="Year")
plot(fxd.cpt.mean, cpt.col="blue", xlab="Year")
fxd.cpt.mean<- cpt.mean(fixed, method="PELT", Q=3)
ncpts(fxd.cpt.mean)
x <- c(1:10, 13:22)
y <- numeric(20)
## Create first segment
y[1:10] <- 20:11 + rnorm(10, 0, 1.5)
## Create second segment
y[11:20] <- seq(11, 15, len=10) + rnorm(10, 0, 1.5)
## Plot it
par(mar=c(4,4,1,1)+0.2)
plot(x,y, ylim=c(5, 20), pch=16)
y[1:10]
y[11-20]
y[11:20]
g<- rnorm(10,0,1.5)
g
?rnorm
breaks <- x[which(x >= 9 & x <= 17)]
breaks
breaks
for(i in 1:length(breaks)){
piecewise1 <- lm(y ~ x*(x < breaks[i]) + x*(x>=breaks[i]))
mse[i] <- summary(piecewise1)[6]
}
mse <- as.numeric(mse)
mse<- numeric(length(breaks))
for(i in 1:length(breaks)){
piecewise1 <- lm(y ~ x*(x < breaks[i]) + x*(x>=breaks[i]))
mse[i] <- summary(piecewise1)[6]
}
mse <- as.numeric(mse)
plot(mse~breaks)
breaks[which(mse==min(mse))]
piecewise2 <- lm(y ~ x*(x < 9) + x*(x > 9))
summary(piecewise2)
plot(x,y, ylim=c(5, 20), pch=16)
curve((3.3133 + 16.6352) + (0.5843-1.3025)*x, add=T, from=1, to=9)
curve((3.3133 - 0.9116) + 0.5843*x, add=T, from=9, to=max(x))
